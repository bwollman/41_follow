/*
 * This file was automatically generated by EvoSuite
 */

package ghm.follow.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ghm.follow.search.LineResult;
import ghm.follow.search.SearchableTextPane;
import java.awt.Font;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.plaf.FontUIResource;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestSearchableTextPane {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Font font0 = Font.decode("|");
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 2);
      List<LineResult> list0 = searchableTextPane0.highlight("|", 2);
      assertEquals(2, searchableTextPane0.getTabSize());
      assertEquals(1, list0.size());
      assertNotNull(list0);
  }

  @Test
  public void test1()  throws Throwable  {
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem((Icon) null);
      FontUIResource fontUIResource0 = (FontUIResource)jCheckBoxMenuItem0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 10);
      assertNotNull(searchableTextPane0);
      
      int int0 = searchableTextPane0.search("Line ");
      assertEquals(10, searchableTextPane0.getTabSize());
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      JButton jButton0 = new JButton();
      FontUIResource fontUIResource0 = (FontUIResource)jButton0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 1);
      assertNotNull(searchableTextPane0);
      
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertEquals(true, boolean0);
      assertEquals(1, searchableTextPane0.getTabSize());
  }

  @Test
  public void test3()  throws Throwable  {
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem((Icon) null);
      FontUIResource fontUIResource0 = (FontUIResource)jCheckBoxMenuItem0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 10);
      assertNotNull(searchableTextPane0);
      
      int int0 = searchableTextPane0.search((String) null);
      assertEquals((-1), int0);
      assertEquals(10, searchableTextPane0.getTabSize());
  }

  @Test
  public void test4()  throws Throwable  {
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      FontUIResource fontUIResource0 = (FontUIResource)defaultListCellRenderer0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 1);
      assertNotNull(searchableTextPane0);
      
      List<LineResult> list0 = searchableTextPane0.highlight("Line ", 1);
      assertEquals(true, list0.isEmpty());
      assertEquals(1, searchableTextPane0.getTabSize());
      assertNotNull(list0);
  }
}
