/*
 * This file was automatically generated by EvoSuite
 */

package ghm.follow.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ghm.follow.search.SearchEngine;
import ghm.follow.search.WordResult;
import java.util.List;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SearchEngineEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SearchEngine searchEngine0 = new SearchEngine((-1097));
      List<WordResult> list0 = searchEngine0.search("", "");
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test
  public void test1()  throws Throwable  {
      SearchEngine searchEngine0 = new SearchEngine((-274));
      List<WordResult> list0 = searchEngine0.search("", "");
      assertNotNull(list0);
      assertEquals(false, list0.isEmpty());
  }

  @Test
  public void test2()  throws Throwable  {
      SearchEngine searchEngine0 = new SearchEngine(1501);
      List<WordResult> list0 = searchEngine0.search("", " (");
      assertEquals(0, list0.size());
      assertNotNull(list0);
  }

  @Test
  public void test3()  throws Throwable  {
      SearchEngine searchEngine0 = new SearchEngine(0);
      List<WordResult> list0 = searchEngine0.search(")", ")");
      assertNotNull(list0);
      assertEquals(1, list0.size());
  }

  @Test
  public void test4()  throws Throwable  {
      SearchEngine searchEngine0 = new SearchEngine((-48));
      // Undeclared exception!
      try {
        searchEngine0.search(",", ",");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Unknown search strategy requested [flags=-48
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      SearchEngine searchEngine0 = new SearchEngine(1501);
      List<WordResult> list0 = searchEngine0.textSearch((String) null, (String) null);
      assertEquals(true, list0.isEmpty());
  }

  @Test
  public void test6()  throws Throwable  {
      SearchEngine searchEngine0 = new SearchEngine(1501);
      List<WordResult> list0 = searchEngine0.search(" (", (String) null);
      assertNotNull(list0);
      assertEquals(0, list0.size());
  }

  @Test
  public void test7()  throws Throwable  {
      SearchEngine searchEngine0 = new SearchEngine(0);
      List<WordResult> list0 = searchEngine0.search(")", "");
      assertNotNull(list0);
      assertEquals(0, list0.size());
  }
}
