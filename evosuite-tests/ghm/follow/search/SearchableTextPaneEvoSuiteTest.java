/*
 * This file was automatically generated by EvoSuite
 */

package ghm.follow.search;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ghm.follow.search.LineResult;
import ghm.follow.search.SearchableTextPane;
import java.awt.Font;
import java.util.List;
import javax.swing.JPasswordField;
import javax.swing.plaf.FontUIResource;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class SearchableTextPaneEvoSuiteTest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      FontUIResource fontUIResource0 = (FontUIResource)jPasswordField0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 6);
      assertNotNull(searchableTextPane0);
      
      List<LineResult> list0 = searchableTextPane0.highlight((String) null, 6);
      assertEquals(6, searchableTextPane0.getTabSize());
      assertNotNull(list0);
  }

  @Test
  public void test1()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      FontUIResource fontUIResource0 = (FontUIResource)jPasswordField0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 6);
      assertNotNull(searchableTextPane0);
      
      int int0 = searchableTextPane0.search("AE?aoXZD:8'");
      assertEquals(6, searchableTextPane0.getTabSize());
      assertEquals((-1), int0);
  }

  @Test
  public void test2()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-758));
      assertNotNull(searchableTextPane0);
      
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertEquals(-758, searchableTextPane0.getTabSize());
      assertEquals(false, searchableTextPane0.isFontSet());
      assertEquals(true, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      FontUIResource fontUIResource0 = (FontUIResource)jPasswordField0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 0);
      assertNotNull(searchableTextPane0);
      
      List<LineResult> list0 = searchableTextPane0.highlight("gFYT;UL/j,c}`,w.#wxr", 0);
      assertNotNull(list0);
      assertEquals(0, list0.size());
      assertEquals(0, searchableTextPane0.getTabSize());
  }

  @Test
  public void test4()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-758));
      assertNotNull(searchableTextPane0);
      
      List<LineResult> list0 = searchableTextPane0.highlight("", (-758));
      assertNotNull(list0);
      assertEquals(false, searchableTextPane0.isFontSet());
      assertEquals(0, list0.size());
      assertEquals(-758, searchableTextPane0.getTabSize());
  }

  @Test
  public void test5()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      FontUIResource fontUIResource0 = (FontUIResource)jPasswordField0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 6);
      assertNotNull(searchableTextPane0);
      
      int int0 = searchableTextPane0.search((String) null);
      assertEquals((-1), int0);
      assertEquals(6, searchableTextPane0.getTabSize());
  }

  @Test
  public void test6()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField(0);
      FontUIResource fontUIResource0 = (FontUIResource)jPasswordField0.getFont();
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) fontUIResource0, 6);
      assertNotNull(searchableTextPane0);
      
      int int0 = searchableTextPane0.search("");
      assertEquals(6, searchableTextPane0.getTabSize());
      assertEquals((-1), int0);
  }
}
