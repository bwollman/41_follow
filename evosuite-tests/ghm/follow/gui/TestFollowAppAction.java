/*
 * This file was automatically generated by EvoSuite
 */

package ghm.follow.gui;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ghm.follow.FollowApp;
import ghm.follow.InvalidVkException;
import ghm.follow.gui.About;
import ghm.follow.gui.Clear;
import ghm.follow.gui.ClearAll;
import ghm.follow.gui.Debug;
import ghm.follow.gui.Delete;
import ghm.follow.gui.DeleteAll;
import ghm.follow.gui.Edit;
import ghm.follow.gui.Pause;
import ghm.follow.gui.Reset;
import java.io.IOException;
import javax.swing.Icon;
import javax.swing.KeyStroke;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestFollowAppAction {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Clear clear0 = new Clear((FollowApp) null);
      assertNotNull(clear0);
      
      clear0.getIcon();
      assertEquals(82, clear0.getMnemonic());
  }

  @Test
  public void test1()  throws Throwable  {
      Edit edit0 = new Edit((FollowApp) null);
      assertNotNull(edit0);
      
      int int0 = edit0.getMnemonic();
      assertEquals(84, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      Pause pause0 = new Pause((FollowApp) null);
      assertNotNull(pause0);
      
      pause0.getContext();
      assertEquals(80, pause0.getMnemonic());
  }

  @Test
  public void test3()  throws Throwable  {
      About about0 = new About((FollowApp) null);
      assertNotNull(about0);
      
      about0.getApp();
      assertEquals(98, about0.getMnemonic());
  }

  @Test
  public void test4()  throws Throwable  {
      Debug debug0 = new Debug((FollowApp) null);
      assertEquals(85, debug0.getMnemonic());
      assertNotNull(debug0);
  }

  @Test
  public void test5()  throws Throwable  {
      Delete delete0 = new Delete((FollowApp) null);
      assertNotNull(delete0);
      
      KeyStroke keyStroke0 = delete0.getAccelerator();
      assertEquals(68, delete0.getMnemonic());
      assertNotNull(keyStroke0);
      assertEquals("ctrl pressed D", keyStroke0.toString());
  }

  @Test
  public void test6()  throws Throwable  {
      DeleteAll deleteAll0 = new DeleteAll((FollowApp) null);
      assertNotNull(deleteAll0);
      
      deleteAll0.setIcon((Icon) null);
      assertEquals(101, deleteAll0.getMnemonic());
  }

  @Test
  public void test7()  throws Throwable  {
      DeleteAll deleteAll0 = new DeleteAll((FollowApp) null);
      assertNotNull(deleteAll0);
      
      deleteAll0.setMnemonic((String) null);
      assertEquals(101, deleteAll0.getMnemonic());
  }

  @Test
  public void test8()  throws Throwable  {
      About about0 = new About((FollowApp) null);
      assertNotNull(about0);
      
      about0.setMnemonic("");
      assertEquals(98, about0.getMnemonic());
  }

  @Test
  public void test9()  throws Throwable  {
      ClearAll clearAll0 = new ClearAll((FollowApp) null);
      assertNotNull(clearAll0);
      
      clearAll0.setAccelerator((String) null);
      assertEquals(65, clearAll0.getMnemonic());
  }

  @Test
  public void test10()  throws Throwable  {
      Reset reset0 = new Reset((FollowApp) null);
      assertNotNull(reset0);
      
      reset0.setAccelerator("");
      assertEquals(83, reset0.getMnemonic());
  }

  @Test
  public void test11()  throws Throwable  {
      Edit edit0 = new Edit((FollowApp) null);
      assertNotNull(edit0);
      
      edit0.setAccelerator("VK_Q");
      assertEquals(84, edit0.getMnemonic());
  }
}
