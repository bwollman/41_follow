/*
 * This file was automatically generated by EvoSuite
 */

package ghm.follow;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import ghm.follow.FileFollower;
import ghm.follow.io.FilteredDestination;
import ghm.follow.io.JTextComponentDestination;
import ghm.follow.io.OutputDestination;
import ghm.follow.search.SearchEngine;
import java.io.File;
import javax.swing.JTextArea;
import javax.swing.text.JTextComponent;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestFileFollower {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("; fxileHasChanged=", "; fxileHasChanged=");
      OutputDestination[] outputDestinationArray0 = new OutputDestination[1];
      FileFollower fileFollower0 = new FileFollower(file0, 84, 786, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      // Undeclared exception!
      try {
        fileFollower0.restart();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      File file0 = new File("; fxileHasChanged=", "; fxileHasChanged=");
      OutputDestination[] outputDestinationArray0 = new OutputDestination[1];
      FileFollower fileFollower0 = new FileFollower(file0, 84, 786, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      JTextComponentDestination jTextComponentDestination0 = new JTextComponentDestination((JTextComponent) null, false);
      fileFollower0.removeOutputDestination((OutputDestination) jTextComponentDestination0);
      assertEquals(786, fileFollower0.getLatency());
      assertEquals(84, fileFollower0.getBufferSize());
  }

  @Test
  public void test2()  throws Throwable  {
      File file0 = new File("WP$M");
      OutputDestination[] outputDestinationArray0 = new OutputDestination[4];
      FileFollower fileFollower0 = new FileFollower(file0, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      fileFollower0.isPaused();
      assertEquals(32768, fileFollower0.getBufferSize());
      assertEquals(1000, fileFollower0.getLatency());
  }

  @Test
  public void test3()  throws Throwable  {
      OutputDestination[] outputDestinationArray0 = new OutputDestination[10];
      FileFollower fileFollower0 = new FileFollower((File) null, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      fileFollower0.unpause();
      assertEquals(false, fileFollower0.isPaused());
      assertEquals(1000, fileFollower0.getLatency());
      assertEquals(32768, fileFollower0.getBufferSize());
  }

  @Test
  public void test4()  throws Throwable  {
      File file0 = new File("WP$M");
      OutputDestination[] outputDestinationArray0 = new OutputDestination[4];
      FileFollower fileFollower0 = new FileFollower(file0, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      boolean boolean0 = fileFollower0.addOutputDestination(outputDestinationArray0[0]);
      assertEquals(1000, fileFollower0.getLatency());
      assertEquals(true, boolean0);
      assertEquals(32768, fileFollower0.getBufferSize());
  }

  @Test
  public void test5()  throws Throwable  {
      OutputDestination[] outputDestinationArray0 = new OutputDestination[1];
      FileFollower fileFollower0 = new FileFollower((File) null, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      fileFollower0.isBeingFollowed();
      assertEquals(1000, fileFollower0.getLatency());
      assertEquals(32768, fileFollower0.getBufferSize());
  }

  @Test
  public void test6()  throws Throwable  {
      OutputDestination[] outputDestinationArray0 = new OutputDestination[1];
      FileFollower fileFollower0 = new FileFollower((File) null, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      fileFollower0.setLatency((-327));
      assertEquals(-327, fileFollower0.getLatency());
  }

  @Test
  public void test7()  throws Throwable  {
      File file0 = new File("WP$M");
      OutputDestination[] outputDestinationArray0 = new OutputDestination[4];
      FileFollower fileFollower0 = new FileFollower(file0, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      fileFollower0.start();
      fileFollower0.start();
      assertEquals(true, fileFollower0.isBeingFollowed());
      assertEquals(32768, fileFollower0.getBufferSize());
  }

  @Test
  public void test8()  throws Throwable  {
      OutputDestination[] outputDestinationArray0 = new OutputDestination[10];
      FileFollower fileFollower0 = new FileFollower((File) null, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      int int0 = fileFollower0.getBufferSize();
      assertEquals(32768, int0);
      assertEquals(1000, fileFollower0.getLatency());
  }

  @Test
  public void test9()  throws Throwable  {
      OutputDestination[] outputDestinationArray0 = new OutputDestination[3];
      FileFollower fileFollower0 = new FileFollower((File) null, (-679), (-679), outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      int int0 = fileFollower0.getLatency();
      assertEquals(-679, fileFollower0.getBufferSize());
      assertEquals((-679), int0);
  }

  @Test
  public void test10()  throws Throwable  {
      OutputDestination[] outputDestinationArray0 = new OutputDestination[1];
      FileFollower fileFollower0 = new FileFollower((File) null, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      fileFollower0.pause();
      assertEquals(true, fileFollower0.isPaused());
      assertEquals(32768, fileFollower0.getBufferSize());
  }

  @Test
  public void test11()  throws Throwable  {
      File file0 = new File("WP$M");
      OutputDestination[] outputDestinationArray0 = new OutputDestination[4];
      JTextArea jTextArea0 = new JTextArea();
      SearchEngine searchEngine0 = new SearchEngine(1101);
      FilteredDestination filteredDestination0 = new FilteredDestination((JTextComponent) jTextArea0, searchEngine0, "9I8z'", true);
      outputDestinationArray0[0] = (OutputDestination) filteredDestination0;
      outputDestinationArray0[1] = (OutputDestination) filteredDestination0;
      outputDestinationArray0[2] = (OutputDestination) filteredDestination0;
      outputDestinationArray0[3] = (OutputDestination) filteredDestination0;
      FileFollower fileFollower0 = new FileFollower(file0, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      FileFollower.Runner fileFollower_Runner0 = fileFollower0.new Runner();
      assertNotNull(fileFollower_Runner0);
      
      fileFollower_Runner0.runAction();
      assertEquals(1000, fileFollower0.getLatency());
      assertEquals(32768, fileFollower0.getBufferSize());
  }

  @Test
  public void test12()  throws Throwable  {
      File file0 = new File("; fxileHasChanged=", "; fxileHasChanged=");
      OutputDestination[] outputDestinationArray0 = new OutputDestination[1];
      FileFollower fileFollower0 = new FileFollower(file0, 84, 786, outputDestinationArray0);
      assertNotNull(fileFollower0);
      
      FileFollower.Runner fileFollower_Runner0 = fileFollower0.new Runner();
      assertNotNull(fileFollower_Runner0);
      
      fileFollower_Runner0.run();
      assertEquals(786, fileFollower0.getLatency());
      assertEquals(84, fileFollower0.getBufferSize());
  }
}
